#!/Users/pedros/.rakubrew/versions/moar-2023.09/bin/perl6

my $time = BEGIN { now }
END { say "Total execution time (s): " , now - INIT now }

say "Compile time: ", now - $time;

use lib '/Users/pedros/CeFEMA-psebastiao/fitteia/Development/OFE/onefite/rakumod/OFE';

our constant OFE-PATH="/Users/pedros/CeFEMA-psebastiao/fitteia/Development/OFE/onefite/rakumod/OFE";


use OFE;
use OFEParameters;
use OFEOutput;
use OFELog;
use OFEParfile;
use OFEStpfile;
use MONKEY-SEE-NO-EVAL;
use MONKEY;
use Test;

my $test-path=OFE-PATH;
$test-path=$test-path.subst("rakumod/OFE","t");

my class OutputCapture {
    has @!lines;
    
    method print (\s) { @!lines.append(s) }
    method captured () { @!lines.join }
}


plan 4;
$time = now;
my $eng = OFE::Engine.new.read("$test-path/2/test2.sav").blocks(:r).parameters :r;
my $parfile = OFEParfile::Parfile.new;
is $parfile.write($eng.par-selected.table).get.join("\n"), "$test-path/2/test2.par".IO.slurp, "parameters: create parfile works! ({ now -$time } s)" ;

$time = now;
is $parfile.write($eng.par-selected.table,:fix-all).get.join("\n"), "$test-path/2/test2-fixed-all.par".IO.slurp, "parameters: fix all! ({ now -$time } s)" ;;

$time = now;
is $parfile.write($eng.par-selected.table,:fix-none).get.join("\n"), "$test-path/2/test2-fixed-none.par".IO.slurp, "parameters: fix none! ({ now -$time } s)" ;;

$time = now;
#dir('.', :test(/\.par/)).race.map({ $_.unlink if $_.IO.f; say $_});
$eng = OFE::Engine.new.read("$test-path/7/test7.sav").blocks(:r).parameters :r;
is $parfile.write($eng.par-selected.table,:fix-none,:No<1>).get.join("\n"), "$test-path/7/fit.par".IO.slurp, "parameters: fix none! ({ now -$time } s)" ;;


our sub myEVAL(%c,$str) {
    	EVAL $str;
}


