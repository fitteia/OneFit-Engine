#!/usr/bin/env raku


my %*SUB-MAIN-OPTS =  :named-anywhere, :allow-no, :bundling ;

multi MAIN ('help') { MAIN :h }

multi MAIN (Bool :h(:help($))) {
    note qq:to/END_HELP/;
    Usage:
    ./INSTALL [-h|--help]
    ./INSTALL [--dpkg] [-c|--compile] [-t|--test] [--image] [-i|--install]
    --dpkg    # to install required debian packages
    --compile # to comlipe and install the OneFit engine core
    --test    # to run raku module tests
    --image   # to edit the /etc/ImageMagick-6/policy.xml file to enable ghostscript formatys
    --install # to install OneFit-Engine as a raku modules available to all users
    negated options:
    ex: use [-/c|--/compile]  or [--no-c|--no-compile] no negate option compile
END_HELP
}

multi MAIN (Bool :$dpkg = False, # to install required debian packages
	    Bool :c(:$compile) = True, # to comlipe and install the OneFit engine core
	    Bool :t(:$test) = True, # to run raku module tests
	    Bool :$image = False, # to edit the /etc/ImageMagick-6/policy.xml file to enable ghostscript formats
	    Bool :i(:$install) = True, # to install OneFit-Engine as a raku modules available to all users
	   ){
    shell "git stash";
    shell "git pull";
    my $pv =shell("perl -MConfig -e 'print \$Config\{archlib\}' | awk -F'/' '\{print \$NF\}'",:out).out.lines(:close).head;
    my $arch= shell("arch",:out).out.lines(:close).head;
    my $root=$*CWD;
    
    if $dpkg {
	for cmds().lines {
	    if $_.contains("vi /etc/ImageMagick-6") {
		say "edit /etc/ImageMagick-6/policy.xml to enable ghostscript formats";
		shell($_) if $image
	    }
	    else { shell $_ }
	}
    }

#    say "install source in $*CWD and binaries, with perl version: $pv";
#    run "make MROOT=$root ARCH=$arch PERLVERSION=$pv set";

    if $compile.Bool {
	say "install source in $*CWD and binaries with perl version: $pv";
	shell "/usr/bin/env make MROOT=$root ARCH=$arch PERLVERSION=$pv install";
    }
    if $test.Bool {
	"/tmp/OneFit-Engine-test".IO.mkdir;
	shell "/usr/bin/env sudo zef -v install ./" if $install ;
	shell "rm -fr /tmp/OneFit-Engine-test" if "/tmp/OneFit-Engine-test".IO.e;
    }
    else { shell "/usr/bin/env sudo zef -v --/test --install-to=site install ./" if $install }
}

sub cmds () {
    qq:to/END_CMDS/;
sudo apt install libperl-dev swig gcc dpkg-dev libgfortran5 cfortran gfortran grace imagemagick texlive-font-utils ghostscript libcgi-pm-perl zip pdftk sudo raku curl liblapack3 libblas3 libblas-dev libatlas-base-dev libatlas3-base

cd /tmp && sudo curl -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/cernlib-base-dev_20061220+dfsg3-4.4_all.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/cernlib-base_20061220+dfsg3-4.4_all.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/libkernlib1-dev_20061220+dfsg3-4.4_amd64.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/libkernlib1-gfortran_20061220+dfsg3-4.4_amd64.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/libmathlib2-dev_20061220+dfsg3-4.4_amd64.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/libmathlib2-gfortran_20061220+dfsg3-4.4_amd64.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/libpacklib1-gfortran_20061220+dfsg3-4.4_amd64.deb -O http://ftp.de.debian.org/debian/pool/main/c/cernlib/libpacklib1-dev_20061220+dfsg3-4.4_amd64.deb

cd /tmp && sudo dpkg -i cernlib-base_20061220+dfsg3-4.4_all.deb 
cd /tmp && sudo dpkg -i cernlib-base-dev_20061220+dfsg3-4.4_all.deb 
cd /tmp && sudo dpkg -i libkernlib1-gfortran_20061220+dfsg3-4.4_amd64.deb 
cd /tmp && sudo dpkg -i libkernlib1-dev_20061220+dfsg3-4.4_amd64.deb 
cd /tmp && sudo dpkg -i libpacklib1-gfortran_20061220+dfsg3-4.4_amd64.deb 
cd /tmp && sudo dpkg -i libmathlib2-gfortran_20061220+dfsg3-4.4_amd64.deb 
cd /tmp && sudo dpkg -i libmathlib2-gfortran_20061220+dfsg3-4.4_amd64.deb 
cd /tmp && sudo dpkg -i libpacklib1-dev_20061220+dfsg3-4.4_amd64.deb 
cd /tmp && sudo dpkg -i libmathlib2-dev_20061220+dfsg3-4.4_amd64.deb 

vi /etc/ImageMagick-6/policy.xml
END_CMDS
}
