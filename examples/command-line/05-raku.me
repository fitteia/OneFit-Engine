#!/usr/bin/env raku

use JSON::Fast;

my $folder = "$*HOME/public_html/example_05";
my $json-file = "example_05.json";

my $description = qq:to/END_DESCRIPTION/;
onefite command line: Example 03

   1) creates $folder folder
   2) creates file $folder/lixo.txt with random data
   3) runs: cd $folder && onefite fit \"y:[-1.2;1.1](t[1e-3;10],M0,T1)=M0*(1-2*exp(-t/T1))\" lixo.txt --save-to=$json-file --loglin
   4) runs: cd $folder && onefite fit \"y:[-1.2;1.1](t[1e-3;10],M0=1,T1=0.2)=M0*(1-2*exp(-t/T1))\" lixo.txt --save-to=$json-file --loglin

      check file $folder/All.pdf
END_DESCRIPTION

say $description;
shell("rm -fr $folder") if $folder.IO.e;
$folder.IO.mkdir;
my @x = [-3,-2.75,-2.5...1].map({ $_ = $_ + (1+0.1.rand*(-1)**(0..2).rand.floor)});
my @y = gather for @x { take 1-2*exp(-10**$_/0.1) }
@x.map({ $_ = 10**$_ });
"$folder/lixo.txt".IO.spurt: (@x Z @y).join("\n");

shell "cd $folder && onefite fit \"y:[-1.2;1.1](t[1e-3;10],M0,T1)=M0*(1-2*exp(-t/T1))\" lixo.txt --save-to=$json-file --loglin";

shell "cd $folder && mv fit-curves-1.pdf 1.pdf";

shell "cd $folder && onefite fit \"y:[-1.2;1.1](t[1e-3;10],M0=1,T1=0.2)=M0*(1-2*exp(-t/T1))\" lixo.txt --save-to=$json-file --loglin";

shell "cd $folder && pdftk 1.pdf fit-curves-1.pdf cat output All.pdf && rm 1.pdf ";
say "lookup for more output in $folder";
