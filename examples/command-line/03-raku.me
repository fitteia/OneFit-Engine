#!/usr/bin/env raku

use JSON::Fast;

my $folder = "$*HOME/public_html/example_03";
my $json-file = "example_03.json";

my $description = qq:to/END_DESCRIPTION/;
onefite command line: Example 03

   1) creates $folder folder
   2) creates file $folder/lixo.txt with random data

      runs: cd $folder && onefite fit \"y:[-10;10](x[-11;11],a,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file 

      runs: cd $folder && onefite fit \"y:[-10;10](x[-11;11],a,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file --autoy

      runs: cd $folder && onefite fit \"y:[-10;10](x[-11;11],a,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file --autox --autoy

      runs: cd $folder && onefite fit \"y:[-10;10](x[-11;11],a=5,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file

      check file $folder/All.pdf
END_DESCRIPTION

say $description;
($folder).map({ .IO.rmdir if .IO.e });
$folder.IO.mkdir;
my @x = [-5..5].map({ $_ = $_ + (1+0.1.rand*(-1)**(0..2).rand.floor)});
my @y = gather for @x { take 4 + 0.3*$_ - 0.5*$_**2 }
"$folder/lixo.txt".IO.spurt: (@x Z @y).join("\n");

shell "cd $folder && onefite fit \"y:[-10;10](x[-11;11],a,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file ";

shell "cd $folder && mv fit-curves-1.pdf 1.pdf";

shell "cd $folder && onefite fit \"y:[-10;10](x[-11;11],a,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file --autoy";	

shell "cd $folder && mv fit-curves-1.pdf 2.pdf";

shell "cd $folder && onefite fit \"y:[-10;10](x[-11;11],a,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file --autox --autoy";

shell "cd $folder && mv fit-curves-1.pdf 3.pdf";

shell "cd $folder && onefite fit \"y:[-10;10](x[-11;11],a=5,b,c)=a+b*x+c*pow(x,2.0)\" lixo.txt --save-to=$json-file ";	

shell "cd $folder && pdftk 1.pdf 2.pdf 3.pdf fit-curves-1.pdf cat output All.pdf && rm 1.pdf 2.pdf 3.pdf";

say "lookup for more output in $folder";
